Plan for parseError Utility

Goal
Normalize any error (HTTP, JS, string, unknown) into a consistent format with:
userErrorMessage
devErrorMessage
code
status
(optional) stack

Set Environment Flag
parseError.stackTraceEnabled = process.env.NODE_ENV === 'development';

Handle Error Types
null/undefined → fallback message
Axios/HTTP error → parse error.response, config
JS Error object → use .message and .stack
String → use as-is
Unknown → try to stringify or fallback

Format Messages
User message: plain, friendly
Dev message: detailed (URL, method, status, body)
Optionally Add Stack
Include error.stack only if stackTraceEnabled is true

Export & Use in App

Import in global error handler, form submission, and ErrorBoundary

